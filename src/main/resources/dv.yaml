product:
  name: Red Hat DV
  abbreviation: Fuse-DV
  stage: CR*
  issueTrackerUrl: https://github.com/teiid/teiid/issues
version: ${version.fuse.prefix}
milestone: ${version.sprint.milestone}
group: Fuse DV
defaultBuildParameters:
  environmentId: 1
  buildScript: 'mvn -e -V -B -DskipTests -DfailIfNoTests=false -Dtest=false clean
    deploy'

builds:
- name: teiid-12.1.0
  project: teiid/teiid
    #fetchScmUrl: ${teiid.fetch.scmUrl}
    #pushScmUrl: ${teiid.push.scmUrl}
    #tag: ${teiid.tag}
    #buildCommand: ${teiid.buildCommand}
    #externalScmUrl: git+https://code.engineering.redhat.com/gerrit/teiid/teiid.git
  scmUrl: git+ssh://code.stage.engineering.redhat.com/teiid/teiid.git
  scmRevision: teiid-${version.teiid}
  customPmeParameters:
  - '-DdependencyOverride.com.sun.xml.bind:*@*=2.2.11.redhat-4'
  - '-DdependencyOverride.org.ow2.asm:*@*='
  - '-DprojectMetaSkip=true'
  buildScript: >
     
     sed -i "s|<module>accumulo</module>|<!--module>accumulo</module-->|" "connectors/pom.xml"
     sed -i "s|<module>cassandra</module>|<!--module>cassandra</module-->|" "connectors/pom.xml"
     sed -i "s|<module>google</module>|<!--module>google</module-->|" "connectors/pom.xml"
     sed -i "s|<module>ldap</module>|<!--module>ldap</module-->|" "connectors/pom.xml"
     sed -i "s|<module>couchbase</module>|<!--module>couchbase</module-->|" "connectors/pom.xml"
     sed -i "s|<module>amazon</module>|<!--module>amazon</module-->|" "connectors/pom.xml"
     sed -i "s|<module>salesforce</module>|<!--module>salesforce</module-->|" "connectors/pom.xml"
     sed -i "s|<module>solr</module>|<!--module>solr</module-->|" "connectors/pom.xml"
     sed -i "s|<module>odata</module>|<!--module>odata</module-->|" "connectors/pom.xml"
     sed -i "s|<module>swagger</module>|<!--module>swagger</module-->|" "connectors/pom.xml"
     sed -i "s|<module>sandbox</module>|<!--module>sandbox</module-->|" "connectors/pom.xml"
     sed -i "s|<module>infinispan</module>|<!--module>infinispan</module-->|" "connectors/pom.xml"
     
     sed -i "s|<module>translator-jpa</module>|<!--module>translator-jpa</module-->|" "connectors/misc/pom.xml"
     sed -i "s|<module>translator-olap</module>|<!--module>translator-olap</module-->|" "connectors/misc/pom.xml"
    
    'mvn -e -V -B -DskipTests -DfailIfNoTests=false -Dtest=false -Dgpg.skip=true -Pcore-release clean deploy'

- name: teiid-spring-boot-1.0.3
  project: teiid/teiid-spring-boot
    #fetchScmUrl: ${teiid-spring-boot.fetch.scmUrl}
    #pushScmUrl: ${teiid-spring-boot.push.scmUrl}
    #tag: ${teiid-spring-boot.tag}
    #buildCommand: ${teiid-spring-boot.buildCommand}
    #externalScmUrl: git+https://code.engineering.redhat.com/gerrit/teiid/teiid-spring-boot.git
  scmUrl: git+ssh://code.stage.engineering.redhat.com/teiid/teiid-spring-boot.git
  scmRevision: teiid-spring-boot-${version.teiid-springboot}
  customPmeParameters:
  - '-DdependencyOverride.com.sun.xml.bind:*@*=2.2.11.redhat-4'
  - '-DdependencyOverride.org.ow2.asm:*@*='
  - '-DprojectMetaSkip=true'
  buildScript: 'mvn -e -V -B -DskipTests -DfailIfNoTests=false -Dtest=false -Dgpg.skip=true -Prelease clean deploy'
  dependencies:
  - teiid-12.1.0

- name: teiid-openshift-examples-1.0.0
  project: teiid/teiid-openshift-examples
    #fetchScmUrl: ${teiid-openshift-examples.fetch.scmUrl}
    #pushScmUrl: ${teiid-openshift-examples.push.scmUrl}
    #tag: ${teiid-openshift-examples.tag}
    #buildCommand: ${teiid-openshift-examples.buildCommand}
    #externalScmUrl: git+https://code.engineering.redhat.com/gerrit/teiid/teiid-openshift-examples.git
  scmUrl: git+ssh://code.stage.engineering.redhat.com/teiid/teiid-openshift-examples.git
  scmRevision: teiid-openshift-examples-${version.teiid-openshift-examples}
  customPmeParameters:
  - '-DprojectMetaSkip=true'
  buildScript: 'mvn -e -V -B -DskipTests -DfailIfNoTests=false -Dtest=false clean deploy'
  dependencies:
  - teiid-spring-boot-1.0.3

outputPrefixes:
  releaseFile: dv-test
  releaseDir: dv-test
flow:
  #licensesGeneration: gen.downloadFrom 'karaf' matching '.*license\.zip'
  #licensesGeneration: gen.generate()
  #repositoryGeneration: gen.downloadFrom 'karaf' matching '.*-m2repo\.zip'
  #javadocGeneration: gen.downloadFrom 'karaf' matching '.*javadoc\.zip'
  #addons:
  #runtimeDependenciesAnalyzer:
  #  downloadFrom: 'WildFly-Swarm'
  #  matching: '.*runtime-dependencies\.zip'
  #  referenceBuild: 'WildFly-Swarm'
